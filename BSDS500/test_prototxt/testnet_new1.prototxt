name: "testnet"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 481
input_dim: 321

# Convolutional Layer 1
layer {
  name: "conv"
  type: "Convolution"
  bottom: "data"
  top: "conv"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu"
  type: "ReLU"
  bottom: "conv"
  top: "conv"
}

# Convolutional Layer end

# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 1

layer {
  name: "flexconv1"
  type: "FlexConvolution"
  bottom: "conv"
  top: "flexconv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 64
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
  flex_convolution_param {
    sample_kernel_h: 3
    sample_kernel_w: 3
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "conv"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param{
    num_output: 64
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler{
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}


layer {
  name: "eltwise-sum1"
  type: "Eltwise"
  bottom: "conv1"
  bottom: "flexconv1"
  top: "sum1"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "sum1"
  top: "sum1"
}


# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 1 End

# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 2

layer {
  name: "flexconv2"
  type: "FlexConvolution"
  bottom: "sum1"
  top: "flexconv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
  flex_convolution_param {
    sample_kernel_h: 5
    sample_kernel_w: 5
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "sum1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param{
    num_output: 32
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler{
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "eltwise-sum2"
  type: "Eltwise"
  bottom: "conv2"
  bottom: "flexconv2"
  top: "sum2"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu2"
  type: "ReLU"
  bottom: "sum2"
  top: "sum2"
}


# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 2 End

# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 3

layer {
  name: "flexconv3"
  type: "FlexConvolution"
  bottom: "sum2"
  top: "flexconv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 16
    pad: 3
    kernel_size: 7
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
  flex_convolution_param {
    sample_kernel_h: 7
    sample_kernel_w: 7
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "sum2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param{
    num_output: 16
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler{
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "eltwise-sum3"
  type: "Eltwise"
  bottom: "conv3"
  bottom: "flexconv3"
  top: "sum3"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu3"
  type: "ReLU"
  bottom: "sum3"
  top: "sum3"
}
# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 3 End

# Flex Convolutional Layer Concatenate with Pure Convolutional Layer 4
layer {
  name: "flexconv4"
  type: "FlexConvolution"
  bottom: "sum3"
  top: "flexconv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 1
    pad: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
  flex_convolution_param {
    sample_kernel_h: 5
    sample_kernel_w: 5
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "sum3"
  top: "conv4"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param{
    num_output: 1
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler{
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "eltwise-sum4"
  type: "Eltwise"
  bottom: "conv4"
  bottom: "flexconv4"
  top: "sum4"
  eltwise_param { operation: SUM }
}

layer {
  name: "relu4"
  type: "ReLU"
  bottom: "sum4"
  top: "sum4"
}
